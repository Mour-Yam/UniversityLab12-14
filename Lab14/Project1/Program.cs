using System;

namespace Project1
{
    class Program
    {
/*
1.  Напишите объявление статической переменной – члена.
2.  Напишите определение статической переменной – члена.
3.  Напишите объявление указателя на функцию, возвращающую long и принимающую целое.
4.  Измените п.3 так, как если бы функция была членом класса Car.
5.  Напишите  объявление массива 10 указателей п.4.
6.  Реализуйте п.5, используя оператор typedef.
7.  Напишите небольшую программу с объявлением класса, имеющего одну переменную - член  и одну статическую переменную-член.
    Пусть конструктор инициализирует переменную - член и инкрементирует статическую переменную член, а деструктор – декрементирует ее.
8.  Напишите драйвер к п.7, в котором создается три объекта и на экран выводятся значения обычной и статической переменных членов класса.
    Уничтожьте эти объекты и проследите как будет меняться значение статической переменной члена.
9.  Сделайте статическую переменную п.7 - 8 приватной.Напишите и используйте статическую функцию - член для доступа к приватной статической переменной члену ?
10. Напишите указатель на функцию-член для доступа к приватной статической переменной п.9 и используйте его для вывода значения на экран.
11. Добавьте еще две переменные - члена в класс. Включите функции доступа, принимающие значения этих переменных,
    обеспечив при этом всем функциям-членам одинаковый тип возврата и сигнатуры.
    Используйте указатель на функцию-член для доступа к этим функциям.
*/


        class Class1
        {
            private int nValue;
            public int NValue { get { return nValue; } set { nValue = value; } }
            private static int aValue = 0;
            public static int AValue { get { return aValue; } set { aValue = value; } }
            
            public static long aFunction(int fValue)
            {

                return fValue;
            }

            public Class1() { }
            public Class1(int nValue) 
            {
                this.nValue = nValue;
                aValue++;
            }
            ~Class1() 
            {
                aValue--;
            }
         }


        static void Main(string[] args)   
        {
            

        }

    }
}